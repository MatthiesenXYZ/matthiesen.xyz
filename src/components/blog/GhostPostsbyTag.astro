---
import BaseSSR from '@layouts/BaseSSR.astro';
import Container from '@components/ui/container.astro';
import { getGhostPostsbyTag, getGhostTagbySlug } from '@matthiesenxyz/astro-ghostcms/api';
import GhostPowered from '@components/crumbs/GhostPowered.astro';
import Sectionhead from '@components/ui/sectionhead.astro';
import OurBlogAuthors from '@components/blog/OurBlogAuthors.astro';
import GhostPost from '@components/blog/GhostPost.astro';
import BackToBlog from '@components/crumbs/BackToBlog.astro';
import RssIcon from '@components/crumbs/RssIcon.astro';
import TagIndex from '@components/blog/TagIndex.astro';

// CREATE INTERFACE FOR SLUG
interface Props { slug:string }
// GET SLUG
const { slug } = Astro.props;
// GET TAG
const ghostTag = await getGhostTagbySlug(slug);
// IF NO TAG AVAILABLE THEN REDIRECT TO 404
if(ghostTag === undefined) { return Astro.redirect('/404'); }

const posts = await getGhostPostsbyTag(slug)

---
<BaseSSR title={ghostTag.name ? ghostTag.name : slug}>
    <Container>
      <GhostPowered />
      <Sectionhead>
        <Fragment slot="title"> Blog <RssIcon />
            <br> Tag - <div class="text-gray-400 inline"><i class="bi bi-tag"/>{ghostTag.name}</div></Fragment>
        <Fragment slot="desc">
          {ghostTag.description && (`"` + ghostTag.description + `" - `)}
          {ghostTag.count && "Total Posts: " + ghostTag.count.posts}
        </Fragment>
      </Sectionhead>
      <BackToBlog />
      <main class="mt-5 max-w-5xl mx-auto">
        <OurBlogAuthors />
        <TagIndex />
        <ul class="grid gap-16 ">
            { posts.map((post) => <GhostPost post={post} />) }
          </ul>
        </main>
    </Container>
</BaseSSR>